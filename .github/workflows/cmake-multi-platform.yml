# This workflow builds the VanitySearch project using Make on multiple platforms.
# Original CMake workflow adapted for Makefile.
name: Build with Make on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # Run the job on Ubuntu and Windows runners
    runs-on: ${{ matrix.os }}

    strategy:
      # Continue running even if one platform fails
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        # Removed compiler matrix as Make uses system defaults or specified compilers

    steps:
    # Step to checkout the source code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step to set up build environment (install build tools)
    - name: Setup build environment (Ubuntu)
      if: runner.os == 'Linux' # This step only runs on Linux runners
      run: |
        sudo apt update
        sudo apt install -y build-essential git # Install gcc, g++, make, git

    - name: Setup build environment (Windows)
      if: runner.os == 'Windows' # This step only runs on Windows runners
      # Windows runners often have Visual Studio pre-installed (provides cl.exe).
      # They might also have make or you might need to install MinGW/make.
      # The hosted runners documentation suggests MinGW is sometimes available,
      # or you might need to use Chocolatey or a specific action.
      # For this example, let's try to install MinGW via Chocolatey if make is not found.
      # A simpler approach is to hope 'make' is in PATH or use MSVC's nmake/msbuild
      # but VanitySearch's Makefile is for GNU Make. Let's attempt installing make.
      run: |
        # Check if make is available and install if not (using choco for example)
        # Note: This might require administrator privileges or a different approach
        # depending on the runner image. Chocolatey is common.
        choco install make -y
        # Or assume git bash make is available and in PATH

    # Step to build the project using Make
    - name: Build with Make (CPU version)
      # Assuming the Makefile is in the root of the repository.
      # Change the command if you only want GPU version (requires CUDA setup on runner)
      # Or 'make gpu=0 all' for explicit CPU build if Makefile supports it
      run: make all # Compiles the project using the Makefile

    # Optional: Step to verify the build by running the executable
    - name: Run executable (Linux)
      if: runner.os == 'Linux'
      # Assuming the executable is named 'VanitySearch' and is in the root
      run: ./VanitySearch --help

    - name: Run executable (Windows)
      if: runner.os == 'Windows'
      # Assuming the executable is named 'VanitySearch.exe' and is in the root
      run: .\VanitySearch.exe --help
